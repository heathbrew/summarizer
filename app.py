# -*- coding: utf-8 -*-
"""Airephraserwriter.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZWKdbBGgqiWB_B6EcAyHNBoJ0fha14n0

Load the hugging face pegasus paraphraser
"""
import streamlit as st
#for sentence paraphraser
# ! pip install sentence-splitter

#for transformer
# !pip install transformers

# ! pip install SentencePiece

# Importing the pipeline function from the transformers Library
from transformers import pipeline

# ! pip install nltk

import torch
from transformers import PegasusForConditionalGeneration, PegasusTokenizer ,AutoModel, AutoTokenizer 
model_name = 'tuner007/pegasus_paraphrase'
torch_device = 'cuda' if torch.cuda.is_available() else 'cpu'
tokenizer = AutoTokenizer.from_pretrained(model_name)
model = PegasusForConditionalGeneration.from_pretrained(model_name).to(torch_device)

import nltk
# Download the punkt resource
nltk.download('punkt')
def get_response(input_text):
  # Split input_text into sentences using nltk.sent_tokenize
  sentences = nltk.sent_tokenize(input_text)
  # Set num_return_sequences to the number of sentences in input_text
  num_return_sequences = len(sentences)
  batch = tokenizer.prepare_seq2seq_batch([input_text],truncation=True,padding='longest',max_length=60, return_tensors="pt").to(torch_device)
  translated = model.generate(**batch,max_length=60,num_beams=10, num_return_sequences=num_return_sequences, temperature=1.5)
  tgt_text = tokenizer.batch_decode(translated, skip_special_tokens=True)
  # Return tgt_text as a long string
  return tgt_text

"""Start with loading aiwriter gpt 2"""

# Creating a TextGenerationPipeline for text generation
generator = pipeline(task='text-generation', model='gpt2')

"""Generate Text using Prompt"""




st.title("Text Generation")
# Get number of words from user
x = st.number_input("Number of words:", min_value=5, max_value=1000, value=100)
# Divide by 5 to get the number of words for the summary
x = x // 5

# Get text prompt from user
text = st.text_input("Text prompt:")



# #no. of words you want in your summerization
# x = (int(input("no. of words: ")))//5

# #text prompt passed
# text = str(input("text prompt: \n"))
# #text = " One can never say for certain what deadly thoughts are running in the brain of person besides you"

paraphrased = get_response(text)
# paraphrased = get_response(text,10)[0]
# print(paraphrased)

res = generator(paraphrased, max_length=x, do_sample=True, temperature=0.9)

text = res[0][0]['generated_text']
# Replace all newline characters with a single space
text = text.replace("\n", " ")
# Remove any remaining backslashes
text = text.replace("\\", "")
st.write("length of summary is "+str(len(text)))
#print(text)
st.markdown(text, unsafe_allow_html=True)